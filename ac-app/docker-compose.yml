version: '3.7'

networks:
  core_default:
    external: true
    name: core-vn
services:
  frontend:
    build:
      context: ./
      dockerfile: dockerfiles/client.dockerfile
    # command: tail -F anything
    image: ac-app-client-builder:1.0
    container_name: ac-app-client-builder
    volumes:
      - ./client/src:/app/src
    deploy:
      replicas: 0
  web:
    cap_add:
      - NET_ADMIN
    build:
      context: ./
      dockerfile: dockerfiles/app.dockerfile
    image: ac-app:1.0
    command:
      - /bin/sh
      - -c
      - |
        openvpn --config /openvpn/client.ovpn --auth-user-pass /openvpn/pass.txt &
        uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    container_name: ac-app
    volumes:
      - ./webapp:/webapp
      - ../core-repo/async_service/:/core/async_service
      - ../core-repo/database/:/core/database
      - ../core-repo/download_service/:/core/download_service
      - ../core-repo/queue_service/:/core/queue_service
      - ../core-repo/security_service/:/core/security_service
      - ../core-repo/session/:/core/session
      - ../core-repo/store_service/:/core/store_service
      - ./.vscode-server:/root/.vscode-server
      - ../static:/downloaded
      - ./client:/client
      - ./openvpn:/openvpn
    networks:
      - core_default
    environment:
      - PYTHONPATH=/core
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    devices:
      - /dev/net/tun
    dns:
      - 8.8.8.8
      - 8.8.4.4
  test-db:
    container_name: core-test-db
    image: postgres:alpine
    # restart: always
    ports:
      - 65433:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: mydb
    networks:
      - core_default
    deploy:
      replicas: 0
  redis:
    container_name: default-redis
    image: redis:alpine
    networks:
      - core_default
